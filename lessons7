#1). Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
import random

array =[80, 73, 63, -4, -87, -78, -8, -46, -36, -75, -81, 6, -7, -69, -25, 29, 60, 3, -63, -43, -50, -16, -1, -9, 50, 14, -95, 16, 52, -24, -33, -72, -64, 54, 85, -99, 1, -68, 21, 59, 37, 79, -14, -82, -76, 26, 95, 43, -47, -40, -17, 66, -37, 10, -29, -93, 64, 20, -83, -6, 62, -74, -21, 86, -12, 78, -32, 91, 55, -10, 87, -61, -35, 72, -55, -96, 28, 94, 27, -38, 24, 5, 71, -92, -54, 30, 46, -41, 51, 41, 81, 22, -2, 2, 97, -71, 18, -51, -79, 92, 49, -80, -88, 74, -65, -90, -56, -19, -53, 47, 98, -26, -3, 82, -5, -58, 93, -60, 8, 83, 53, 89, 61, -89, -100, 32, 34, 25, -91, -27, -44, 38, -15, 68, -34, 39, 33, 48, 23, -85, -23, 75, -66, 70, 69, -13, 96, 99, -45, 13, -70, -39, 67, 90, -86, -30, 12, 31, 0, -20, -52, 35, 58, 88, 57, -31, -73, -97, -67, -28, 9, -98, 19, -94, -11, 84, 15, 11, -49, 45, 4, -57, 77, -62, -22, -42, -59, 76, 40, -77, -48, -18, 56, 42, 65, 36, -84, 7, 44, 17]

def orb(mass):
    n = 1
    while n < len(mass):
        for j in range(len(mass)-1):
            if mass[j] > mass[j + 1]:
                temp = mass[j]
                mass[j] = mass[j + 1]
                mass[j + 1] = temp
        n += 1
    return mass


print(orb(array))







#2). Отсортируйте по возрастанию методом слияния одномерный вещественный массив, заданный случайными числами на промежутке [0; 50). Выведите на экран исходный и отсортированный массивы.
array = [18, 25, 1, 3, 16, 44, 30, 11, 4, 43, 23, 15, 2, 41, 21, 13, 45, 36, 17, 39, 32, 20, 34, 29, 24, 10, 47, 22, 9, 40, 14, 8, 28, 5, 31, 19, 42, 38, 49, 26, 50, 0, 12, 27, 35, 33, 48, 46, 6, 37, 7]


def merge_sort(mass):
    if len(mass) > 1:
        mid = len(mass) // 2
        right = mass[mid:]
        left = mass[:mid]

        merge_sort(right)
        merge_sort(left)

        i, j, k = 0, 0, 0
        while i < len(right) and j < len(left):
            if left[j] > right[i]:
                mass[k] = right[i]
                i += 1
            else:
                mass[k] = left[j]
                j = j+1
            k += 1

        while i < len(right):
            mass[k] = right[i]
            i += 1
            k += 1

        while j < len(left):
            mass[k] = left[j]
            j += 1
            k += 1

    return mass



print(merge_sort(array))



#3). Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на две равные части: в одной находятся элементы, которые не меньше медианы, в другой — не больше медианы.
import math

array = [1, 8, 6, 4, 2, 2, 3, 5, 9]
# array = [41, 34, 32, 0, 11, 36, 33, 37, 39, 46, 2, 25, 31, 21, 48, 29, 42, 4, 26, 5, 30, 10, 38, 6, 1, 7, 43, 15, 23, 8,12, 27, 9, 24, 3, 16, 14, 45, 49, 47, 20, 17, 19, 28, 35, 40, 13, 18, 22, 44]
print(array)
k = 0
j = 1
mid = len(array) // 2


def gnome(data):
    i, j, size = 1, 2, len(data)
    while i < size:
        if data[i - 1] <= data[i]:
            i, j = j, j + 1
        else:
            data[i - 1], data[i] = data[i], data[i - 1]
            i -= 1
            if i == 0:
                i, j = j, j + 1
    return data[mid]


print('Медианой этого массива является: ', gnome(array))

